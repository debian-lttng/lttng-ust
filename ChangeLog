2012-11-22 lttng-ust 2.1.0-rc2
	* filter interpreter cleanup: use uint64_t for retval
	* Fix: filter linking can dereference NULL pointer on alloc failure
	* Cleanup: remove whitespaces and EOL in tests
	* Filter: use only single lower bit of filter return value
	* Fix: filter: var len array at end of external structure
	* Fix: filter link fail handling
	* Fix: add missing seqnum field to filter
	* filters: perform union rather than intersection
	* Implement support for overlapping wildcard/events
	* Cleanup: add lttng_/lttng-/LTTNG_ prefixes
	* filter: add seqnum field to filter command
	* Filter iteration: iterate on list of filters
	* document that tracepoint names should ideally not be re-used
	* Remove LIBFORMAT config declaration, unused
	* Add libc errno translation layer to UST error code
	* Fix: add const qualifier for filter local void *
	* Fix: re-allow non-lvalue string, sequence, array parameters
	* Tear down handles associated with a closed sessiond socket
	* Distinguish UST return codes from transport return codes
	* Fix: Conditionally disable tests requiring shared libs support
	* Cleanup: don't spawn per-user thread if HOME is not set
	* Manpage: document supported UST contexts
	* Fix: procname context semantic
	* Fix: Fix self-assign warning on struct ustfork_clone_info init
	* Fix: memcpy of string is larger than source
	* Implement liblttng-ust-fork daemon() override test
	* liblttng-ust-fork: override daemon() call
	* ustfork: set errno to ENOSYS if symbol lookup fails
	* Fix: be quiet on filter linker error
	* Build out of src tree
	* Fix: filter bytecode specializer stack leak
	* Fix: reloc offset validation error out on filters with no reloc table
	* Perform calculation on bit size in 64-bit
	* Use uint64_t for packet header content size and packet size
	* Fix: manpage typo "-lllttng-ust" -> "-llttng-ust"
	* Fix: BSD getprogname null pointer dereference
	* Add support for model.emf.uri event info
	* Filter error message cleanup
	* Manpage update: document use in daemons
	* Fix: get_wait_shm() ust mutex deadlock (add 2 missing exit calls)
	* Fix: get_wait_shm() ust mutex deadlock
	* Fix: add events with 0 field to field list

2012-09-10 lttng-ust 2.1.0-rc1
	* Fix make dist: fix liblttng-ust-java dependencies
	* Fix make dist: add missing filter header
	* Fix: backward compatibility with UST 2.0 app probes
	* Fix: Filter ABI changes to support FILTER_BYTECODE_MAX_LEN (65536)
	* Export "written" information about fields
	* Fix filter: pointer to string, not string, should be on stack
	* Fix: tracepoint float nowrite
	* Fix: accept 65536 bytes long bytecodes
	* Add hostname to env
	* ABI change: bump internal version to 3.0.0
	* Fix: threads should be created in DETACHED state
	* Fix: 32-bit x86 strict-aliasing warnings
	* Fix UST SIGPIPE handling
	* Fix: Libtool fails to find dependent libraries when cross-compiling lttng-ust
	* Cleanup: filter: turn bytecode linking error msg into debug
	* Make lttng-ust robust against -finstrument-functions.
	* Filter: keep aliased ax and bx registers
	* Filter: remove interpreter dynamic typing
	* Filter: add missing specialized op names
	* Filter: specialize double-s64 binary comparators
	* Fix filter: fix stack leak on taken branch
	* Filter: Implement stack-based interpreter
	* Filter: double comparator produces s64
	* Filter: use hash table to check merge points
	* Filter: split passes into separate components
	* Filter: cleanup macros
	* Filter: validate range overflow with end of insn
	* Filter: validate that field ref strings are non-NULL
	* Filter: ensure logical operator merge is always s64
	* Filter: we don't care if double/s64 are literals
	* Filter: specialize 'and' and 'or' ops.
	* Implement dispatch-table based interpretor
	* Filter: Specialize unary operators
	* Define switch use as macro in interpreter
	* Filter interpreter: mark float test as unlikely
	* Filter: fix bytecode validation typo
	* Filter: specialize comparators
	* Specialize load and unary ops
	* Validate registers, no need to initialize to 0
	* Filter: opcode for ref loads
	* Remove redundant validation from interpreter
	* filter: Add bytecode validation pass
	* TRACEPOINT_EVENT: add *_nowrite fields for filter
	* Only print filter errors if LTTNG_UST_DEBUG is set
	* Cleanup: remove debug define
	* Filter: add floating point support
	* Remove filter test printouts
	* Implement filter bytecode interpreter and linker
	* Filter: receive, attach and link empty filter
	* Filter: prepare filter stack data
	* Wrap dynamic len array into stackvar union
	* liblttng-ust-comm/lttng-ust-com.c: remove unnecessary goto in ustcomm_accept_unix_sock()
	* liblttng-ust/lttng-ust-comm.c: fixing typo.
	* Fix: remove unused texinfo dep from configure.ac
	* Fix C99 strict compatibility: don't use void * for function pointers
	* Fix c99 compatibility: tp_rcu_dereference_bp() should not use braced-groups within expressions
	* Revert "Fix c99 compatibility: tp_rcu_dereference_bp() should not use braced-groups within expressions"
	* Fix c99 compatibility: tp_rcu_dereference_bp() should not use braced-groups within expressions
	* Fix: perform TLS fixup of nest count outside of UST mutex
	* Fix: liblttng-ust-fork deadlock
	* Fix: handle pthread errors
	* Fix: local apps allowed should disable local (not global) tracing
	* Fix strict ISO-C compatibility for ust-tracepoint-event.h public header
	* Fix: support -std=c99 in tracepoint macros
	* Fix c99 compatibility: use __typeof__ instead of typeof in public headers
	* hello test: fail on old style definition
	* Fix: tracepoint.h should not generate old-style definitions
	* Fix: don't define variables in headers
	* test "hello": add boolean test
	* Fix: perform macro expansion on tracepoint signatures
	* UST check pointer/de-reference order
	* Fix list field: handle error
	* Implement event fields listing
	* Implement field listing command
	* Fix: Block all signals in listener thread
	* Add CodingStyle document to tarball
	* Add coding style document
	* endian.h: support cygwin
	* align.h: support cygwin page size
	* Add cygwin support to libringbuffer getcpu.h
	* Add "2x int" and "2x long" types to the Java interface
	* Add Integer and Long tracepoint types to the Java interface
	* Fix: don't SIGBUS when filesystem is full
	* tracepoint: include stdio.h for NULL definition
	* manpage update: document that probes need gcc
	* Fix: remove # in front on extern "C" {
	* Cleanup: don't use GNU old-style field designator extension
	* Fix: remove padding field after variable sized array
	* Use unsigned long type for events discarded counter
	* Fix: getcpu build with modern uClibc versions
	* Fix: lttng-ust.pc needs to specify -ldl
	* Fix: examples Makefiles should pass $(LIBS) at last
	* Build a jar for the Java side of the JNI interface
	* Fix: ustctl need to send the second fd upon error of 1st fd
	* Fix: Add missing fork test program dependency library
	* Fix: Make the JNI interface actually work
	* Merge branch 'dev'
	* Fix: stringify version description

2012-03-29 lttng-ust 2.0.1
	* Use bsd-compatible fcntl for close-on-exec on socket
	* Fix multi-session wildcard support
	* Fix event lost count when buffer is full
	* Remove inappropriate \n from easy-ust sample

2012-03-20 lttng-ust 2.0.0
	* First STABLE version
	* Add version name

2012-03-20 lttng-ust 2.0.0-rc4
	* Fix out-of-bound write in ltt-events.c
	* Document LTTNG_UST_DEBUG_VALGRIND compilation flag
	* Update COPYING
	* Add exception handling to lttng-gen-tp io operations

2012-03-16 lttng-ust 2.0.0-rc3
	* Fix: sendmsg should retry on EINTR, and use MSG_NOSIGNAL
	* fix: ustcomm_close_unix_sock should close, not shutdown
	* Fix: do not print EPIPE perror, as it is an expected error
	* Ensure that multiplication of clock offset is done on 64-bit
	* Add 2 missing licenses in deprecated tests
	* Remove unbuild and unused (deprecated) make_shared_lib test
	* License text standardization, add missing licenses
	* Cleanup: remove duplicate check for 0 num_subbuf and subbuf_size
	* Fix: power of 2 size check should apply to size_t type, not uint32_t
	* Fix: recvmsg should handle EINTR
	* Make lttng-gen-tp work on python 2.6
	* Make lttng-gen-tp executable

2012-03-02 lttng-ust 2.0.0-rc2
	* Manpage fixes
	* Fix: dmesg printout should not print metadata warnings
	* Fix: use transport name as channel name
	* Fix: Add signature check in tracepoint activation
	* Fix: add tracepoint signature at tracepoint definition site
	* Fix: keep event probe signature, for use by event probe signature check
	* Fix ABI: add padding to structures shared between UST and consumer
	* Fix ABI: add padding to tracepoint and ring buffer config public structu
	* Fix ABI: Adding missing padding in tracepoint event structures
	* Fix: Add include/lttng/ust-config.h to git ignore
	* Fix effect: update README about dlopen()
	* Fix: fixup vtid TLS
	* Fix: fixup ringbuffer tls at constructor by forcing read
	* Fix: fix deadlock with dlopen() lttng-ust
	* Fix: only print event errors every 1048576 hits
	* Fix: add missing debug printout to identify the cause of lost events
	* fix: liblttng-ust-ctl should check for incorrect parameters
	* fix: ust comm error handling segfault
	* Fix: Return -EINVAL instead of print warning if non power of 2 size/num_
	* fix: on exit, leave thread/mmap reclaim to OS
	* fix: Handle sys_futex with async cancel, add missing pthread_join
	* fix: Only munmap the wait page when not exiting from process
	* Use CPPFLAGS instead of CFLAGS for -I
	* Fix type range comparison always false for 64-bit arch
	* demo: remove useless libs
	* tests: include missing headers
	* Add missing limits.h include for NAME_MAX

2012-02-20 lttng-ust 2.0.0-rc1
	* Standardize version across toolchain
	* Fix a typo in gen-tp Makefile
	* Implement the .o file generation in lttng-gen-tp

2012-02-16 lttng-ust 1.9.8
	* Fix comment in tracepoint.h
	* Add loglevel info to manpage
	* Remove stale binary file
	* Add lttng-ust(3)
	* Add a man page for lttng-gen-tp
	* Install easy-ust and gen-tp examples in doc/
	* Create the lttng-gen-tp tools as an helper to generate UST .h and .c files
	* Add missing #define _GNU_SOURCE for sched_getcpu()
	* Define _GNU_SOURCE for all implementation files rather than getcpu.h
	* Add sched_getcpu and sysconf to AC_CHECK_FUNCS
	* Mark lib_ring_buffer_print_errors unused
	* Cleanup: remove extra space from easy_ust example
	* Add missing comma to tracepoint STAP_PROBEV call

2012-02-13 lttng-ust 1.9.7
	* liblttng-ust-java: add missing -classpath ./
	* Only specify that sdt.h provides system integration for now
	* Add STAP_PROBEV check ton configure.ac
	* Add sdt.h integration
	* Remove extern C around probe header
	* Move lttng/config.h to lttng/ust-config.h, and use LTTNG_UST_ namespace
	* Add a configure report at the end of the output
	* Add sdt.h integration option
	* Set default loglevel in metadata
	* Fix: LTTng-UST java jni wrapper does not build with OpenJDK

2012-02-09 lttng-ust 1.9.6
	* Fix tracepoint.h multiple .o within module/core exec linkage bug
	* tracepoint: name -> _name to fix possible namespace clash
	* Add debug printout to tracepoint.c
	* Rename liblttng-ust-libc to liblttng-ust-libc-wrapper
	* Update hardcoded loglevel
	* Add "easy_ust" example
	* Update gitignore
	* Zero-initialize struct msghdr
	* Add environment information
	* Fix event-specific enabling
	* Update static lib linking
	* liblttng-ust-libc: fix linking
	* liblttng-ust-libc: fix lib dependency
	* Install README and ChangeLog into system doc
	* Add hello-static-lib test
	* Fix static provider linking: introduce TRACEPOINT_PROBE_DYNAMIC_LINKAGE
	* Fix 32-bit type: allocated len is used
	* Fix 32-bit type mismatch

2012-02-02 lttng-ust 1.9.5
	* UST comm ABI: Add padding, push version to 2.0
	* Update loglevel names
	* Implement loglevels as event and wildcard attributes
	* Update loglevel ABI: only loglevel value/enum is known by UST
	* Pre-assign fixed loglevels
	* Remove old (now unused) loglevel control code entirely
	* Update loglevel selection ABI
	* Use boot_id as monotonic clock uuid
	* clock: add clock description to metadata
	* Properly fix the timekeeping overflow detection
	* Revert "Fix timestamps for slow-paced event rates"
	* Revert "Force 64-bit timestamps"
	* Declare struct lttng_ust_calibrate
	* Force 64-bit timestamps
	* demo program: ensure we don't link demo on useless libs
	* ust comm: Receive second FD even if 1st receive failed
	* ust consumer: close shm fd after mapping it
	* Add a comment about which wait fd is closed early by UST.
	* Remove leftover structure in ust-abi.h
	* Close stream and channel file descriptors as soon as passed to
	  sessiond
	* Fix AC_LANG_SOURCE usage: only takes one parameter
	* Fix timestamps for slow-paced event rates
	* configure.ac: Use AC_LANG_SOURCE for if else macros
	* Add execution instructions to the demo test program
	* Force the building of shared noinst libraries in the demo test
	  program.
	* Only print the futex perror in debug mode

2011-12-23 lttng-ust 1.9.4
	* Split liblttng-ust into liblttng-ust and liblttng-ust-tracepoint libs
	* Comment the union field (only used in call_rcu scheme)

2011-12-21 lttng-ust 1.9.3
	* Fix clock source overflow on 32-bit archs
	* Remove unused trace_clock_frequency
	* check for negative wait() return value
	* Add DBG message when registering a probe
	* Only show futex warning "perror" in debug mode

2011-12-14 lttng-ust 1.9.2
	* Add missing ust_libc.h to Makefile.am
	* Use DBG instead of WARN for futex_wake workaround message
	* Make dlopen more robust by using the .0 target for the library

2011-12-13 lttng-ust 1.9.1
	* First LTTng-UST 2.0 prerelease.
