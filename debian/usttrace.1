.\" generated with Ronn/v0.4.1
.\" http://github.com/rtomayko/ronn/
.
.TH "USTTRACE" "1" "March 2010" "" ""
.
.SH "NAME"
\fBusttrace\fR \-\- the simplest way to record a trace
.
.SH "SYNOPSIS"
\fBusttrace\fR [\fIoptions\fR] [\fIcommand\fR]
.
.SH "DESCRIPTION"
The \fBusttrace\fR script automatically:
.
.IP "\(bu" 4
creates a daemon
.
.IP "\(bu" 4
enables all markers
.
.IP "\(bu" 4
runs the command specified on the command line
.
.IP "\(bu" 4
after the command ends, prints the location where the trace was saved
.
.IP "" 0
.
.P
Each subdirectory of the save location contains the trace of one process that
was generated by the command. The name of a subdirectory consists in the PID of
the process, followed by the timestamp of its creation.
.
.P
The save location also contains logs of the tracing.
.
.P
When using usttrace, the early tracing is always active, which means that the
tracing is guaranteed to be started by the time the process enters its main()
function.
.
.P
Several usttrace's may be run simultaneously without risk of conflict. This
facilitates the use of the tracer by independent users on a system. Each
instance of usttrace starts its own daemon which collects the events of the
processes it creates.
.
.SH "OPTIONS"
These programs follow the usual GNU command line syntax, with long options
starting with two dashes(`\-'). A summary of options is included below.
.
.TP
\fB\-h\fR
Show summary of options.
.
.TP
\fB\-l\fR
Runtime link with UST library. (Needed only if program was not linked at
compile time with libust.)
.
.TP
\fB\-L\fR
Add path to ust libraries to LD_LIBRARY_PATH.
.
.TP
\fB\-m\fR
Instrument malloc calls.
.
.TP
\fB\-f\fR
Also trace forked processes.
.
.TP
\fB\-s\fR
Use system\-wide daemon instead of creating one for this session.
.
.TP
\fB\-W\fR
Undocumented option.
.
.SH "AUTHOR"
\fBusttrace\fR was written by Pierre\-Marc Fournier.
.
.P
This manual page was written by Jon Bernard <jbernard@debian.org>, for
the Debian project (and may be used by others).
